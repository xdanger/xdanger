---
import { Icon } from "astro-icon/components";
---

<theme-toggle class="flex flex-col">
  <button class="hover:text-accent cursor-pointer rounded-md pr-4" type="button">
    <span class="sr-only">Dark Theme</span>
    <Icon
      name="solar:sun-linear"
      class="h-5 w-5 absolute opacity-100 scale-100 transition-all dark:scale-0 dark:opacity-0"
    />
    <Icon
      name="solar:moon-linear"
      class="h-5 w-5 absolute opacity-0 scale-0 transition-all dark:scale-100 dark:opacity-100"
    />
  </button>
</theme-toggle>

<script>
  // Note that if you fire the theme-change event outside of this component, it will not be reflected in the button's aria-checked attribute. You will need to add an event listener if you want that.
  import { rootInDarkMode } from "@/utils/domElement";

  class ThemeToggle extends HTMLElement {
    constructor() {
      super();
      const button = this.querySelector<HTMLButtonElement>("button");

      if (button) {
        // set aria role value
        button.setAttribute("role", "switch");
        button.setAttribute("aria-checked", String(rootInDarkMode()));

        // button event
        button.addEventListener("click", () => {
          // invert theme
          let themeChangeEvent = new CustomEvent("theme-change", {
            detail: {
              theme: rootInDarkMode() ? "light" : "dark",
            },
          });
          // dispatch event -> ThemeProvider.astro
          document.dispatchEvent(themeChangeEvent);

          // set the aria-checked attribute
          button.setAttribute("aria-checked", String(rootInDarkMode()));
        });
      } else {
        console.warn("Theme Toggle: No button found");
      }
    }
  }

  customElements.define("theme-toggle", ThemeToggle);
</script>
