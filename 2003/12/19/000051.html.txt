1:"$Sreact.fragment"
3:I[8154,["177","static/chunks/app/layout-18d5088c99c4b723.js"],"ThemeProvider"]
4:I[5244,[],""]
5:I[8725,["39","static/chunks/app/error-819170ca5010743f.js"],"default"]
6:I[3866,[],""]
8:I[6213,[],"OutletBoundary"]
b:I[6213,[],"ViewportBoundary"]
d:I[6213,[],"MetadataBoundary"]
f:I[4835,[],""]
:HC["/",""]
:HL["/_next/static/css/89fe303d45fc1d3c.css","style"]
2:T879,
            // Simplified MathJax rendering handler
            window.renderMathJax = function() {
              if (typeof window.MathJax !== 'undefined' && window.MathJax.typesetPromise) {
                window.MathJax.typesetPromise()
                  .then(() => console.log('MathJax render complete'))
                  .catch(err => console.error('MathJax render error:', err));
              }
            };

            // Setup on page load
            window.addEventListener('load', function() {
              console.log('Page loaded, setting up MathJax');

              // Initial render with retry
              const checkAndRender = function() {
                if (typeof window.MathJax !== 'undefined' && window.MathJax.typesetPromise) {
                  console.log('MathJax loaded, rendering');
                  setTimeout(window.renderMathJax, 500);

                  // URL change detection
                  let lastUrl = window.location.href;
                  setInterval(() => {
                    if (lastUrl !== window.location.href) {
                      console.log('URL changed, re-rendering');
                      lastUrl = window.location.href;
                      setTimeout(window.renderMathJax, 500);
                    }
                  }, 500);

                  // Content change detection
                  if (typeof MutationObserver !== 'undefined') {
                    const observer = new MutationObserver(mutations => {
                      if (mutations.some(m => m.addedNodes.length > 0)) {
                        console.log('Content changed, re-rendering');
                        setTimeout(window.renderMathJax, 500);
                      }
                    });

                    observer.observe(document.body, {
                      childList: true,
                      subtree: true
                    });
                  }
                } else {
                  console.log('MathJax not loaded yet, retrying');
                  setTimeout(checkAndRender, 500);
                }
              };

              setTimeout(checkAndRender, 1000);
            });
          0:{"P":null,"b":"dx1xWa8yFVQvlzKNyhDP3","p":"","c":["","2003","12","19","000051"],"i":false,"f":[[["",{"children":[["slug","2003/12/19/000051","c"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/89fe303d45fc1d3c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"className":"__variable_c4692a antialiased","children":[["$","head",null,{"children":[["$","script",null,{"async":true,"src":"/theme-switcher.js"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n            (function() {\n              try {\n                // Store theme preference but don't apply it immediately\n                const storedTheme = localStorage.getItem('theme-preference');\n                const preferredTheme = storedTheme || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n\n                // Set a data attribute instead of class to avoid hydration mismatch\n                document.documentElement.dataset.theme = preferredTheme;\n\n                // Apply the theme class after hydration\n                window.addEventListener('DOMContentLoaded', () => {\n                  setTimeout(() => {\n                    document.documentElement.classList.add(preferredTheme);\n                  }, 0);\n                });\n              } catch (e) {}\n            })();\n          "}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n            window.MathJax = {\n              tex: {\n                inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n                displayMath: [['$$', '$$'], ['\\\\[', '\\\\]']],\n                processEscapes: true,\n                processEnvironments: true\n              },\n              svg: {\n                fontCache: 'global',\n                scale: 1.1  // 增大公式字体大小，默认为 1.0\n              },\n              startup: {\n                ready: function() {\n                  console.log('MathJax is ready');\n                  MathJax.startup.defaultReady();\n                }\n              }\n            };\n          "}}],["$","script",null,{"id":"MathJax-script","async":true,"src":"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}]]}],["$","body",null,{"children":["$","$L3",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"storageKey":"theme-preference","children":["$","$L4",null,{"parallelRouterKey":"children","error":"$5","errorStyles":[],"errorScripts":[],"template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"min-h-screen flex items-center justify-center","children":["$","div",null,{"className":"text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-gray-600","children":"The page you're looking for doesn't exist."}]]}]}],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":[["slug","2003/12/19/000051","c"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7","$undefined",null,["$","$L8",null,{"children":["$L9","$La",null]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","_dfXatbMVDw5c5NQFdjDh",{"children":[["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:I[4223,["48","static/chunks/app/%5B...slug%5D/page-fc406cbb95aa160c.js"],"Header"]
11:I[9605,["48","static/chunks/app/%5B...slug%5D/page-fc406cbb95aa160c.js"],"PostContent"]
12:Tc7a,

<P>　　继续。以下文字翻译自<A href="http://pr.efactory.de/e-pagerank-algorithm.shtml">http://pr.efactory.de/e-pagerank-algorithm.shtml</A>。 
<HR>

<P>　　Lawrence Page和Sergey Brin在个别场合描述了PageRank最初的算法。这就是</P>
<DIV class=code>
<CENTER><STRONG>PR(A) = (1-d) + d (PR(T1)/C(T1) + ... + PR(Tn)/C(Tn))</STRONG> ——算法1</CENTER></DIV>
<P>式中：</P>
<UL>
<LI><STRONG>PR(A)</STRONG> :网页A页的PageRank值； 
<LI><STRONG>PR(Ti)</STRONG> :链接到A页的网页Ti的PageRank值； 
<LI><STRONG>C(Ti)</STRONG> :网页Ti的出站链接数量； 
<LI><STRONG>d </STRONG>:阻尼系数，0&lt;<STRONG>d</STRONG>&lt;1。</LI></UL>
<br /><br />
<P>　　可见，首先，PageRank并不是将整个网站排等级，而是以单个页面计算的。其次，页面A的PageRank值取决于那些连接到A的页面的PageRank的递归值。</P>
<P>　　<STRONG>PR(Ti)</STRONG>值并不是均等影响页面<STRONG>PR(A)</STRONG>的。在PageRank的计算公式里，T对于A的影响还受T的出站链接数<STRONG>C(T)</STRONG>的影响。这就是说，T的出站链接越多，A受T的这个连接的影响就越少。</P>
<P>　　<STRONG>PR(A)</STRONG>是所有<STRONG>PR(Ti)</STRONG>之和。所以，对于A来说，每多增加一个入站链接都会增加<STRONG>PR(A)</STRONG>。</P>
<P>　　最后，所有<STRONG>PR(Ti)</STRONG>之和乘以一个阻尼系数<STRONG>d</STRONG>，它的值在0到1之间。因此，阻尼系数的使用，减少了其它页面对当前页面A的排序贡献。</P>
<H3>随机冲浪模型</H3>
<P>&nbsp;　　Lawrence Page和Sergey Brin为以上这个PageRank算法给出了一个非常简单直观的解释。他们将PageRank视作一种模型，就是用户不关心网页内容而随机点击链接。</P>
<P>　　网页的PageRank值决定了随机访问到这个页面的概率。用户点击页面内的链接的概率，完全由页面上链接数量的多少决定的，这也是上面<STRONG>PR(Ti)</STRONG>/<STRONG>C(Ti)</STRONG>的原因。</P>
<P>　　因此，一个页面通过随机冲浪到达的概率就是链入它的别的页面上的链接的被点击概率的和。并且，阻尼系数<STRONG>d</STRONG>减低了这个概率。阻尼系数<STRONG>d</STRONG>的引入，是因为用户不可能无限的点击链接，常常因无聊而随机跳入另一个页面。</P>
<P>　　阻尼系数<STRONG>d</STRONG>定义为用户不断随机点击链接的概率，所以，它取决于点击的次数，被设定为0-1之间。<STRONG>d</STRONG>的值越高，继续点击链接的概率就越大。因此，用户停止点击并随机冲浪至另一页面的概率在式子中用常数<STRONG>(1-d)</STRONG>表示。无论入站链接如何，随机冲浪至一个页面的概率总是<STRONG>(1-d)</STRONG>。<STRONG>(1-d)</STRONG>本身也就是页面本身所具有的PageRank值。</P>
<P align=center>&nbsp;&lt;&lt;&nbsp;<A href="http://blog.xdanger.com/archives/2003/12/18/000046.html">Google的PageRank概述</A>&nbsp;| <A href="http://blog.xdanger.com/archives/2003/12/21/000053.html">Google的PageRank算法（二）</A>&nbsp;&gt;&gt; </P>

7:["$","div",null,{"className":"min-h-screen","children":[["$","$L10",null,{}],["$","main",null,{"className":"container max-w-3xl mx-auto pb-24","children":["$","article",null,{"className":"prose px-4 md:px-8 dark:prose-invert max-w-none","children":[["$","h1",null,{"children":"Google的PageRank算法（一）"}],["$","time",null,{"className":"text-muted-foreground","children":"December 19, 2003"}],["$","$L11",null,{"html":"$12"}]]}]}]]}]
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
a:null
e:[["$","title","0",{"children":"Google的PageRank算法（一） - xdanger's Blog"}],["$","meta","1",{"name":"description","content":"Google的PageRank算法（一）"}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
