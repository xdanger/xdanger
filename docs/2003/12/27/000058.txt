1:"$Sreact.fragment"
2:I[8154,["177","static/chunks/app/layout-2c7dcd26b2e2a0d9.js"],"ThemeProvider"]
3:I[5244,[],""]
4:I[8725,["39","static/chunks/app/error-84b2fc390f5d90f5.js"],"default"]
5:I[3866,[],""]
7:I[6213,[],"OutletBoundary"]
a:I[6213,[],"ViewportBoundary"]
c:I[6213,[],"MetadataBoundary"]
e:I[4835,[],""]
:HC["/",""]
:HL["/_next/static/css/58b8c39566abcbc1.css","style"]
:HL["/_next/static/css/4e78de3af272c993.css","style"]
0:{"P":null,"b":"H-ychCOfu7e8ZBvnTzFG7","p":"","c":["","2003","12","27","000058"],"i":false,"f":[[["",{"children":[["slug","2003/12/27/000058","c"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/58b8c39566abcbc1.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/4e78de3af272c993.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"zh-CN","className":"__variable_4686ee antialiased","children":[["$","head",null,{"children":[["$","script",null,{"src":"/theme-switcher.js","defer":true}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n            (function() {\n              try {\n                const storedTheme = localStorage.getItem('theme-preference');\n                const theme = storedTheme || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n                document.documentElement.classList.add(theme);\n              } catch (e) {}\n            })();\n          "}}]]}],["$","body",null,{"children":["$","$L2",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"storageKey":"theme-preference","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$4","errorStyles":[],"errorScripts":[],"template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"min-h-screen flex items-center justify-center","children":["$","div",null,{"className":"text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-gray-600","children":"The page you're looking for doesn't exist."}]]}]}],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":[["slug","2003/12/27/000058","c"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6","$undefined",null,["$","$L7",null,{"children":["$L8","$L9",null]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","aH-9qOIbgtMTea0d-FYJE",{"children":[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Lc",null,{"children":"$Ld"}]]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[4223,["48","static/chunks/app/%5B...slug%5D/page-44bd698ec973eb49.js"],"Header"]
10:Tf82,

<H2>PageRank特性</H2>
<P>　　PageRank的特性可以通过以下范例用插图表示。&nbsp;<BR><BR><IMG height=157 alt="" src="http://blog.xdanger.com/archives/pics/20031227a.gif" width=145 align=left border=0>　　假设一个小网站由三个页面A、B、C组成，A连接到B和C，B连接到C，C连接到A。虽然Page和Brin实际上将阻尼系数<STRONG>d</STRONG>设为<STRONG>0.85</STRONG>，但这里我们为了简便计算就将其设为<STRONG>0.5</STRONG>。尽管阻尼系数d的精确值无疑是影响到PageRank值的，可是它并不影响PageRank计算的原理。因此，我们得到以下计算PageRank值的方程：</P>
<DIV class=code>(A) = 0.5 + 0.5 PR(C)<BR>PR(B) = 0.5 + 0.5 (PR(A) / 2)<BR>PR(C) = 0.5 + 0.5 (PR(A) / 2 + PR(B))</DIV><BR clear=all>
<P>　　这些方程很容易求解，以下得到每个页面的PageRank值：</P>
<br /><br />
<DIV class=code>PR(A) = 14/13 = 1.07692308<BR>PR(B) = 10/13 = 0.76923077<BR>PR(C) = 15/13 = 1.15384615</DIV>
<P>　　很明显所有页面PageRank之和为3，等于网页的总数。就像以上所提的，此结果对于这个简单的范例来说并不特殊。<BR><BR>　　对于这个只有三个页面的简单范例来说，通过方程组很容易求得PageRank值。但实际上，互联网包含数以亿计的文档，是不可能解方程组的。</P>
<H2>PageRank的迭代计算</H2>
<P>　　由于实际的互联网网页数量，Google搜索引擎使用了一个近似的、迭代的计算方法计算PageRank值。就是说先给每个网页一个初始值，然后利用上面的公式，循环进行有限次运算得到近似的PageRank值。我们再次使用“三页面”的范例来说明迭代计算，这里设每个页面的初始值为1。</P>
<DIV class=code>
<TABLE>
<TBODY>
<TR>
<TD>迭代次数</TD>
<TD>PR(A)</TD>
<TD>PR(B)</TD>
<TD>PR(C)</TD></TR>
<TR>
<TD>0</TD>
<TD>1</TD>
<TD>1</TD>
<TD>1</TD></TR>
<TR>
<TD>1</TD>
<TD>1</TD>
<TD>0.75</TD>
<TD>1.125</TD></TR>
<TR>
<TD>2</TD>
<TD>1.0625</TD>
<TD>0.765625</TD>
<TD>1.1484375</TD></TR>
<TR>
<TD>3</TD>
<TD>1.07421875</TD>
<TD>0.76855469</TD>
<TD>1.15283203</TD></TR>
<TR>
<TD>4</TD>
<TD>1.07641602</TD>
<TD>0.76910400</TD>
<TD>1.15365601</TD></TR>
<TR>
<TD>5</TD>
<TD>1.07682800</TD>
<TD>0.76920700</TD>
<TD>1.15381050</TD></TR>
<TR>
<TD>6</TD>
<TD>1.07690525</TD>
<TD>0.76922631</TD>
<TD>1.15383947</TD></TR>
<TR>
<TD>7</TD>
<TD>1.07691973</TD>
<TD>0.76922993</TD>
<TD>1.15384490</TD></TR>
<TR>
<TD>8</TD>
<TD>1.07692245</TD>
<TD>0.76923061</TD>
<TD>1.15384592</TD></TR>
<TR>
<TD>9</TD>
<TD>1.07692296</TD>
<TD>0.76923074</TD>
<TD>1.15384611</TD></TR>
<TR>
<TD>10</TD>
<TD>1.07692305</TD>
<TD>0.76923076</TD>
<TD>1.15384615</TD></TR>
<TR>
<TD>11</TD>
<TD>1.07692307</TD>
<TD>0.76923077</TD>
<TD>1.15384615</TD></TR>
<TR>
<TD>12</TD>
<TD>1.07692308</TD>
<TD>0.76923077</TD>
<TD>1.15384615</TD></TR></TBODY></TABLE></DIV>
<P>　　 重复几次后，我们的到一个良好的接近PageRank理想值的近似值。根据Lawrence Page和Sergey Brin共开发表的文章，他们实际需要进行<STRONG>100</STRONG>次迭代才能得到整个互联网的满意的网页级别值。</P>
<P>　　同样，用迭代计算的方式，每个网页的PageRank值之和仍然收敛于整个网络的页面数的。因此，每个页面的平均的PageRank值为<STRONG>1</STRONG>。实际上的值在<STRONG>(1－d)</STRONG>和<STRONG>(dN+(1-d))</STRONG>之间，这里的<STRONG>N</STRONG>是互联网网页总数。如果所有页面都连接到一个页面，并且此页单独地连接自身，那么将出现理论上的最大值。</P>
<P align=center>&nbsp;&lt;&lt; <A href="http://blog.xdanger.com/archives/2003/12/21/000053.html">Google的PageRank算法（二）</A>&nbsp;|&nbsp;<A href="http://blog.xdanger.com/archives/2004/01/16/000080.html">PageRank在Google搜索中的实现</A>&nbsp;&gt;&gt;</P>

6:["$","div",null,{"className":"min-h-screen","children":[["$","$Lf",null,{}],["$","main",null,{"className":"container max-w-3xl mx-auto pb-24","children":["$","article",null,{"className":"prose prose-lg px-4 md:px-8 dark:prose-invert max-w-none","children":[["$","h1",null,{"className":"text-2xl font-bold","children":"Google的PageRank算法（三）"}],["$","time",null,{"className":"text-md text-muted-foreground","children":"December 27, 2003"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$10"},"className":"text-lg"}]]}]}]]}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
9:null
d:[["$","title","0",{"children":"Google的PageRank算法（三） - xdanger's Blog"}],["$","meta","1",{"name":"description","content":"Google的PageRank算法（三）"}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
